'use srict';

// Регулярные выражения – мощное средство поиска и замены в строке.

// В JavaScript регулярные выражения реализованы отдельным объектом RegExp и интегрированы в методы строк.

// Регулярное выражение (оно же «регэксп», «регулярка» или просто «рег»), состоит из шаблона (также говорят «паттерн») и необязательных флагов.

/* синтаксис */
// new RegExp('pattern', 'flags'); 
// /pattern/f


/* Символьные классы */

// \d
// Эквивалентен набору символов [0-9]
// \D
// Не числа

// \w
// Сопоставляется с любым алфавитно-цифровым символом из базового латинского алфавита, включая символ подчёркивания. Эквивалентен набору символов [A-Za-z0-9_]
// \W
// Не буквы

// \s
// Сопоставляется с одиночным пробельным символом, который включает в себя пробел, табуляцию, подачу страницы, перевод строки и другие пробельные символы Юникода.

/* флаги */

// i 
// С этим флагом поиск не зависит от регистра: нет разницы между A и a

// g
// С этим флагом поиск ищет все совпадения, без него – только первое.

// m
// Многострочный режим (рассматривается в главе Многострочный режим якорей ^ $, флаг "m").

// const ans = prompt('Введите ваше число');

// const reg = /\d/g;

// проверка на присутсвие паттерна в строке (булевое значение)
// console.log(reg.test(ans));


// резултат: первая позиция символа в строке
// console.log(ans.search(reg));



// будет получен массив с результатм, в зависимости от флага
// console.log(ans.match(reg)); 



// const pass = prompt('Password');

// все символы, которые попадут в строку мы заменим на звёздочку
// чтобы в строку попала имменно точка, используем синтаксис экранирования: /\./
// console.log(pass.replace(/./g, "*"));


// console.log('12-34-56'.replace(/-/g, ':'));



const str = 'My name R2D2';
// поиск по шаблону 'буква\цифра\буква\цифра'
console.log(str.match(/\w\d\w\d/i));